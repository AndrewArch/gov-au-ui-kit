/*
Grid

This framework uses [Bourbon](https://github.com/thoughtbot/bourbon) and [Neat](https://github.com/thoughtbot/neat) to create a consistent 16 column responsive grid layout with good defaults.

Avoid mixing this layout with other grid layouts.

The grid unit proportions, gutters and spacing are defined in `_grid-settings.scss`.

If you need to reference just the grid, not the whole framework, use:

```
@import "grid-settings"
```

This guidance is in part adapted from [GOV.UK elements](http://govuk-elements.herokuapp.com/) under [Open Government Licence v3.0](https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/), and [18F Draft US Web Design Standards](https://standards.usa.gov/getting-started/) under [CC0 1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/legalcode).

Style guide: Grid
*/

/*
Extending grid settings

**REWRITE THIS**

We define the grid placement for a number of elements in `_block-elements.scss`: `header`, `footer`, `main`, `article` and `aside`.

If you need to do something we don't provide you need to use `span-columns` function [provided by Neat](http://thoughtbot.github.io/neat-docs/latest/#span-columns).

For each new element you will need to manually set column properties, from largest to smallest:
1. `$desktop`
2. `$tablet`
3. `$mobile`

[Log an issue](https://github.com/AusDTO/gov-au-ui-kit/issues) if you need to do this. As there is probably a common need and we should provide this for everyone else.

Style guide: Grid.1 Extending grid settings
*/

/*
Breakpoints

This framework uses 3 breakpoints for grid layout:

- Mobile: 4 columns, 420px maximum
- Tablet: 8 columns, 768px maximum
- Desktop: 12 columns, 1200px maximum

We are exploring using a fourth, wide desktop breakpoint.

If you give an element a modified grid setting consider the implications for all breakpoints. The [Digital Service Standard recommends](https://www.dto.gov.au/standard/6-consistent-and-responsive/) you build using mobile first design principles. **IMPROVE LINK**

Please also consider [type sizing](section-typography.html#kssref-typography-2-headings-body-copy) at different breakpoints.
```
@import 'vendor/neat/neat-helpers';
$desktop: new-breakpoint(max-width 1200px 12);
$tablet: new-breakpoint(max-width 768px 8);
$mobile: new-breakpoint(max-width 420px 4);
```

Style guide: Grid.2 Breakpoints
*/

/*
Margins & gutters

Maximum page width is set to 16 columns centred, 1200px. Gutters between the columns are a minimum of 20px.

```
$grid-columns: 12 !global;
$max-width: em(1200) !global;
$gutter: em(20);
```

There is a wrapper class for escaping the outer (grid) container: `<div class="wrapper">`. This is currently used for the page `header` and `footer`.

**Image example of layouts**

Style guide: Grid.3 Margins & gutters
*/

/*
Header & footer

The site header and footer are targeted by their ARIA roles, not a `class` or `id`.

Use `banner` and `contentinfo` roles, respectively.

Style guide: Grid.4 Page header & footer
/*

/*
Accessibility

Design for small screens first. Optimise for larger sizes, but do not assume you know which devices people are using.

Long lines reduce legibility. Lines of text should be no longer than 75 characters. Place text in narrower grid boxes to stop text lines from becoming too wide.

Low-vision users should be able to increase the size of the text by up to 200 per cent without breaking the layout.

Style guide: Grid.5 Accessibility
*/

/*
Debugging

Turn on the visual grid to help debugging:

```
$visual-grid: true;
```

See the example [Bourbon Neat working grid layout](http://neat.bourbon.io/examples/).

Style guide: Grid.6 Debugging
*/

$border-box-sizing: true;
$disable-warnings: true;

$grid-columns: 12 !global;
$max-width: em(1200) !global;
$gutter: em(20);

// Media Queries
@import 'vendor/neat/neat-helpers';
$desktop: new-breakpoint(max-width $max-width 12);
$tablet: new-breakpoint(max-width 768px 8);
$mobile: new-breakpoint(max-width 420px 4);

/*
Debugging

Turn on the visual grid to help debugging.

```
$visual-grid: true;
```

Style guide: Grid settings.3 Debugging
*/

// Toggle visibility of your grid columns for development/debugging.
$visual-grid: false;

// Make sure you set the viewport to the device-width in your head, eg
// <meta name="viewport" content="width=device-width, initial-scale=1.0">

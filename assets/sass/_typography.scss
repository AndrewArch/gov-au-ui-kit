// Typography
//
// This explains the typography suite provided by the gov-au-ui-kit. It provides basic styling for content and typographic defaults.
//
// It is designed to meet the highest standards of usability and accessibility. It also sets a consistent visual voice of credibility, warmth, and ease-of-use across Australian Government digital platforms.
//
// This aims to meet common goverment typographic needs:
// - clear and consistent headings
// - legible body paragraphs
// - clear labels
// - easy-to-use input fields.
//
// Style guide: Typography

// Lato typeface
//
// The framework uses the open source Lato font family, regular, bold and italic typefaces.
//
// Lato provides:
//
// - legibility and adaptability
// - optimisation for print, web and mobile interfaces
// - a variety of weights that are easy to read at all sizes
// - clear headers
// - highly-readable body text
// - feeling of warmth with strong structure for stability and seriousness
//
// ### Font stacks
//
// We're currently testing Lato in 3 styles:
// - regular 400
// - italic 400
// - regular 700.
//
// The main target of the font stacks are undecided. We are confident can achieve a high degree of coverage across a range of browsers using the fall-backs.
//
// basic styling for content with some basic typographic defaults
//
// add table with parings for each breakpoint
//
// choice of fonts stacks good support across browser history etc.
//
// working on compatability for web font stacks for IE 6-9, won't be able to use the import rule - devs need to add HTML to their head
//
// We're currently testing Lato, using 3 styles: regular 400, italic 400, regular 700, as per the future design direction. At this stage the main target of our font stacks are still undecided, but we're confident to achieve a high degree of coverage using the fall-backs. We still need to consider the pros and cons of any webfont inclusion.
//
// We also will likely need to move our webfonts into the `head` of any HTML, as IE is not a fan of @import for fonts (requires testing).
//
// This gives us pretty much 95% coverage across Windowns and Mac and a lot of FOSS default font installs.
//
// We still need to consider the pros and cons of any webfont inclusion. We are also working on compatability for web font stacks for Internet Explorer version 6-9. Developers will not be able to use the import rule and will need to add HTML to their head.
//
// ### Pairing/style examples
// #### Lato regular
//
// ABCDEFGHIJKLMNOPQRSTUVWXYZ
//
// abcdefghijklmnopqrstuvwxyz
//
// 1234567890(!@#s%g.,?:;)
//
// #### Lato bold
//
// <strong>ABCDEFGHIJKLMNOPQRSTUVWXYZ</strong>
//
// <strong>abcdefghijklmnopqrstuvwxyz</strong>
//
// <strong>1234567890(!@#s%g.,?:;)</strong>
//
// Markup: templates/font-stacks-scss.hbs
//
// Style guide: Typography.1 Lato typeface

@import url('https://fonts.googleapis.com/css?family=Lato:700,400italic,400&subset=latin,latin-ext');

$base-serif: 'Book Antiqua', Georgia, 'Bitstream Vera Serif', serif;
$base-sans-serif: 'Lato', Verdana, 'Bitstream Vera Sans', sans-serif;
$base-monospace: 'Lucida Sans Typewriter', 'Lucida Console', Monaco, 'Bitstream Vera Sans Mono', monospace;

$base-font-family: $base-sans-serif;

// Not actually sure if Lato 700 is being applied...
strong {
  font-weight: 700;
}

// Base spacing & spacing
//
// Base spacing and spacing are relative to the font size and calculated in the SCSS.
//
// The values are anchored to the `base-leading` (which is unit-less) and act as a multiplier of the font size. The `base-spacing` unit is then set in ems (ie by * 1em).
//
// Visual example
//
// Roadmap: likely change to the base-spacing unit to be give a figure easier to multiplay and divide.
//
// Markup: templates/base-typography-scss.hbs
//
// Style guide: Typography.3 Base spacing & spacing

// Leading/line-height.
$base-leading: 1.8;
$base-heading-leading: 1.4;
$small-leading: 1.2;

// Base spacing, relative to leading.
$base-spacing: $base-leading * 1em;
$medium-spacing: $base-spacing * 0.75;
$small-spacing: $base-spacing / 2;
$tiny-spacing: $base-spacing / 4;

// Font weights
$base-font-weight: 400;
$bold-font-weight: 700;
$heading-font-weight: $bold-font-weight;

// Font styles
$base-font-style: normal;

html {
  color: $body-text-colour;
  line-height: $base-leading;
  font-family: $base-font-family;
  font-weight: $base-font-weight;
}

// Headings & body copy
//
// The type sizes are suitable for average screen densities and reading comfort under typical conditions.
//
// They are initially based on a perfect fourth modular scale.
//
// ### Beakpoints
//
// - Mobile (extra small devices): 4 columns, 420px maximum
// - Tablet (small devices): 8 columns, 768px maximum
// - Desktop (medium devices): 12 columns, 1000px maximum
// - Large desktops (large devices): 12 columns, 1200px maximum
//
// ### Font size & line heights default settings
//
// Use relative units to allow for variety across users' browsers and device screens.
//
//  This table shows size and line height (size/line-height) in pixels and ems.
//
// <table style="border-style:solid;border-width:1px;">
  // <tr>
    // <th>Style</th>
    // <th>Mobile</th>
    // <th>Tablet</th>
    // <th>Desktop</th>
    // <th>Large desktops</th>
//   </tr>
  // <tr>
    // <td>H1 - Display type 1</td>
    // <td>51/61<br>3.1875em</td>
    // <td><br>57/68<br>3.5625em<br></td>
    // <td>51/61<br>3.1875em</td>
    // <td>57/68<br>3.5625em</td>
//   </tr>
  // <tr>
    // <td>H2 - Display type 2</td>
    // <td>43/52<br>2.6875em</td>
    // <td>43/52<br>2.6875em</td>
    // <td>38/45<br>2.375em</td>
    // <td>43/52<br>2.6875em</td>
//   </tr>
  // <tr>
    // <td>H3 Article main title</td>
    // <td>28/40<br>1.75em</td>
    // <td>32/45<br>1.75em</td>
    // <td>28/40<br>1.75em</td>
    // <td>28/40<br>1.75em</td>
//   </tr>
  // <tr>
    // <td>H4 section heading / introduction</td>
    // <td>21/32<br>1.3125em</td>
    // <td>24/34<br>1.5em</td>
    // <td>21/32<br>1.3125em</td>
    // <td>21/32<br>1.3125em</td>
//   </tr>
  // <tr>
    // <td>H5 sub section heading</td>
    // <td>18/30<br>1.125em</td>
    // <td>18/30<br>1.125em</td>
    // <td>16/28<br>1em</td>
    // <td>16/28<br>1em</td>
//   </tr>
  // <tr>
    // <td>H6 sub section heading (uppercase)</td>
    // <td>18/30<br>1.125em</td>
    // <td>18/30<br>1.125em</td>
    // <td>16/28<br>1em</td>
    // <td>16/28<br>1em</td>
//   </tr>
  // <tr>
    // <td>Body copy</td>
    // <td>18/30<br>1.125em</td>
    // <td>18/30<br>1.125em</td>
    // <td>16/28,1em</td>
    // <td>16/28,1em</td>
//   </tr>
  // <tr>
    // <td>Index, captions, links</td>
    // <td>14/20<br>0.875em</td>
    // <td>14/20<br>0.875em</td>
    // <td>14/20<br>0.875em</td>
    // <td>14/20<br>0.875em</td>
//   </tr>
// </table>
//
// ### Base size examples: body copy
//
// Markup: templates/heading-body-styles.hbs
//
// Style guide: Typography.2 Headings & body copy

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: $base-heading-leading;
  font-weight: $base-font-weight;
  margin-bottom: $small-spacing;
  margin-top: $base-spacing;
}

h1 {
  font-size: rem(57);
  font-weight: $base-font-weight;
  line-height: $small-leading;

  @include media($desktop) {
    font-size: rem(51);
  }

  @include media($tablet) {
    font-size: rem(57);
  }

  @include media($mobile) {
    font-size: rem(51);
  }

  &:first-of-type {
    margin-top: $tiny-spacing;
  }
}

h2 {
  font-size: rem(43);
  line-height: $small-leading;

  @include media($desktop) {
    font-size: rem(38);
  }

  @include media($tablet) {
    font-size: rem(43);
  }

  @include media($mobile) {
    font-size: rem(38);
  }

  &:first-of-type {
    margin-top: $tiny-spacing;
  }
}

h3 {
  font-size: rem(28);
  font-weight: $heading-font-weight;

  @include media($desktop) {
    font-size: rem(28);
  }

  @include media($tablet) {
    font-size: rem(32);
  }

  @include media($mobile) {
    font-size: rem(28);
  }
}

h4 {
  font-size: rem(21);
  font-weight: $heading-font-weight;

  @include media($desktop) {
    font-size: rem(21);
  }

  @include media($tablet) {
    font-size: rem(24);
  }

  @include media($mobile) {
    font-size: rem(21);
  }
}

h5 {
  font-size: rem(16);
  font-weight: $heading-font-weight;

  @include media($desktop) {
    font-size: rem(16);
  }

  @include media($tablet) {
    font-size: rem(18);
  }

  @include media($mobile) {
    font-size: rem(18);
  }
}

h6 {
  @extend h5;
}

a {
  color: $link-colour;
  text-decoration: none;
  border-bottom: 1px solid;

  &:visited {
    color: $link-colour;
  }

  &:hover,
  &:active {
    color: $highlight-colour;
    border-bottom-width: 3px;
  }

}

// Common content elements base & vertical styling
//
// Style guide: Typography.4 Common content elements

// Lists (bullets & numbers)
//
// List styles have been developed to enable unordered (bulleted) and ordered (numbered).
//
// Definition styles have been developed to display definition terms as lists.
//
// Markup: templates/list-examples.hbs
//
// Style guide: Typography.4 Common content elements.1 Lists (bullets & numbers)

// Quotations, in-line quotes & blockquotes
//
// There are 2 ways of using quotes:
// - **in-line quoting** has been developed to handle additional nested elements (ie quotes, ordered and unordered lists).
// - **pull quotes**.
//
// Markup: templates/quotation-examples.hbs
//
// Style guide: Typography.4 Common content elements.6 Quotations, in-line quotes & blockquotes

// Callouts & warnings
//
// Callouts and warnings can be used to draw the users attention to a specific piece of content.
//
// This makes maintaining the vertical rhythm between content easier, and avoids spacing bugs, as well as sizing bugs that are not clear when just testing with a few paragraphs and headings.
//
// We may move some of this to only appy to content inside an `article`.
//
// Markup: templates/callouts-examples.hbs
//
// Style guide: Typography.4 Common content elements.2 Callouts & warnings

ul,
ol,
dl,
p,
dt,
dd {
  margin-bottom: $small-spacing;
  font-size: rem(16);

  @include media($tablet) {
    font-size: rem(18);
  }

  @include media($mobile) {
    font-size: rem(18);
  }
}

li {
  margin-bottom: ($small-spacing / 2);
  margin-left: -($small-spacing / 4);
  padding-left: ($small-spacing / 4);

  ul,
  ol {
    margin-top: ($small-spacing / 2);
    margin-bottom: 0;
  }
}

dt {
  font-weight: 700;
  margin-top: $medium-spacing;

  &:first-of-type {
    margin-top: 0;
  }
}

// For display font sizing.
.display {
  @extend h1;
}

// More specialised typography.
//
// For abstracts or page introductory paragraphs.
.abstract {
  font-size: rem(24);
}

blockquote {
  margin: $medium-spacing 0;
  padding: $small-spacing ($base-spacing + ($small-spacing * 0.75));
  background-color: $lighter-grey;
  font-family: $base-serif;
  quotes: '\201C''\201D''\2018''\2019';

  &.pullquote {
    padding: 0;
    background-color: $background-colour;

    p {
      @extend h3;

      line-height: $base-leading;
      text-align: center;
      font-weight: $base-font-weight;
    }

// Support: IE7 does not properly support pseudo elements `:before`/`:after`: http://caniuse.com/#feat=css-sel2

    &::before,
    &::after {
      text-align: center;
      margin: 0;
    }

    &::after {
      margin-top: -($tiny-spacing);
    }
  }

  &::before,
  &::after {
    display: block;
    height: 0;
    font-family: $base-serif;
    font-size: rem(43);
    color: $aqua;
  }

  &::before {
    margin-left: -($small-spacing * 0.75);
    content: open-quote;
  }

  &::after {
    margin-right: -($small-spacing * 0.75);
    margin-top: -($small-spacing);
    padding-bottom: $medium-spacing;
    text-align: right;
    content: close-quote;
  }

  footer {
    margin-top: $medium-spacing;
    padding-top: ($small-spacing / 2);
    border-top: 1px solid $light-grey;
  }

  cite {
    display: inline-block;
    font-family: $base-sans-serif;

    &::before {
      content: 'Citation: ';
      text-transform: lowercase;
      font-variant: small-caps;
      letter-spacing: 1px;
      color: $dark-grey;
    }
  }

  // So that nested blockquotes do not break the vertical rhythm.
  blockquote {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: 0;
    padding-bottom: 0;
  }
}

q {
  // Investigate: switching to html entitites?
  quotes: '“' '”' '‘' '’' '“' '”' '‘' '’';
}

cite {
  font-style: $base-font-style;
}


// Callouts
.callout {
  margin: $base-spacing $small-spacing;
  padding: $medium-spacing $medium-spacing $medium-spacing $base-spacing;
  border-radius: $tiny-border-radius;
  box-shadow: 0 0 8px rgba($black, 0.45);
}

.warning-block {
  border-left: ($small-spacing / 2) solid $red;
  padding-left: $base-spacing - ($small-spacing / 2);
}

// Badges
//
// Styling for 'badges' that either:
//
// - hold item number
// - indicate status (eg alpha, beta, draft).
//
// Markup: templates/badges-examples.hbs
//
// Style guide: Typography.4 Common content elements.7 Badges

%base-badge {
  // We should put something clever here.
  border-radius: $large-border-radius;
  padding: $tiny-spacing $small-spacing;
  vertical-align: top;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: rem(14);
}

.badge--alpha {
  @extend %base-badge;

  background-color: $non-black;
  color: $white;
}

.badge--beta {
  @extend %base-badge;

  background-color: $maroon;
  color: $white;

$badges: (
  "default":  $grey,
  "alpha":    $non-black,
  "beta":     $maroon,
  "error":    $error-colour,
  "success":  $green,
);

@each $badge-type, $color in $badges {
  .badge--#{$badge-type} {
    display: inline-block;
    background-color: $color;
    border-radius: $large-border-radius;
    padding: $tiny-spacing $small-spacing;
    line-height: 1;
    letter-spacing: 1px;
    color: lighten($color, 75%);
    font-size: rem(14);
  }
}
